---
- name: Set java minor version
  set_fact:
    minor: "{{ java_minor_version | default('.*', True) }}"

- name: 'Fetch root page {{ openjdk_root_page }}'
  uri:
    url: '{{ openjdk_root_page }}/{{ java_major_version }}/'
    return_content: True
  register: root_page

- name: Find release url
  set_fact:
    release_url: >-
      {{ root_page['content']
        | regex_findall('(https://download[\.\w]+/java/GA/jdk'
          + java_major_version|string + '[.\d]+/[\d\w]+/'
          + java_major_version|string + '/GPL/openjdk-'
          + java_major_version|string + '[\d._]+linux-x64_bin[\w\d.]+)')
      }}

- name: Exit if OpenJDK version is not General-Availability Release
  fail:
    msg: 'OpenJDK version {{ java_major_version }} not GA Release'
  when: release_url[1] is not defined

- name: 'Get artifact checksum {{ release_url[1] }}'
  uri:
    url: '{{ release_url[1] }}'
    return_content: True
  register: artifact_checksum

- name: Show artifact checksum
  debug:
    var: artifact_checksum.content

- name: 'Download artifact from {{ release_url[0] }}'
  get_url:
    url: '{{ release_url[0] }}'
    dest: '{{ download_path }}'
    checksum: 'sha256:{{ artifact_checksum.content }}'
  register: file_downloaded
  retries: 20
  delay: 5
  until: file_downloaded is succeeded

- name: Set downloaded artifact variable
  set_fact:
    java_artifact: '{{ file_downloaded.dest }}'

- name: Split artifact name
  set_fact:
    parts: >-
      {{ java_artifact
        | regex_findall('^(.*j[dkre]{2})-([0-9]+)[u.]([0-9.]+)[-_]([a-z]+)-(x64|i586)')
        | first | list }}

- name: Set variables based on split
  set_fact:
    java_package: '{{ parts[0][-3:] }}'
    java_major_version: '{{ parts[1] }}'
    java_minor_version: '{{ parts[2] }}'
    java_os: '{{ parts[3] }}'
    java_arch: '{{ parts[4] }}'
