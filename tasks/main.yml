---
# - name: 'Enable EPEL repository'
#   yum:
#     name: 'https://dl.fedoraproject.org/pub/epel/epel-release-latest-\
#       {{ ansible_distribution_major_version }}.noarch.rpm'
#     state: 'present'
#   delegate_to: 'localhost'
#   connection: 'local'
#   run_once: True
#   register: status
#   until: status is succeeded
#   become: True
#   when:
#     - transport == 's3'
#     - ansible_os_family == 'RedHat'

# - name: 'Install pip package'
#   package:
#     name: '{{ ansible_os_family == 'Ubuntu' | ternary('python-pip','python2-pip') }}'
#     state: 'present'
#   delegate_to: 'localhost'
#   connection: 'local'
#   run_once: True
#   register: status
#   until: status is succeeded
#   become: True
#   when: transport == 's3'

# - name: 'Install boto module'
#   pip:
#     name:
#       - 'pip'
#       - 'botocore'
#       - 'boto'
#       - 'boto3'
#     state: present
#     extra_args: --upgrade
#   delegate_to: 'localhost'
#   connection: 'local'
#   run_once: True
#   register: status
#   until: status is succeeded
#   become: True
#   when: transport == 's3'

- name: Load a variable file based on distribution or OS family
  include_vars: '{{ distribution }}'
  with_first_found:
    - '{{ ansible_system }}/{{ ansible_os_family }}.yml'
    # - '{{ ansible_os_family }}.yml'
    - default.yml
  loop_control:
    loop_var: distribution

- name: Choose platform based task
  include_tasks: '{{ platform }}'
  with_first_found:
    - 'system/{{ ansible_system }}.yml'
    - system/not-supported.yml
  loop_control:
    loop_var: platform

- name: Apply security policy patch
  include_tasks: '{{ platform }}'
  with_first_found:
    - 'security_policy_apply/{{ ansible_system }}.yml'
    - security_policy_apply/not-supported.yml
  loop_control:
    loop_var: platform
  when:
    - java_unlimited_policy_enabled
