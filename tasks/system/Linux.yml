---
- name: "Load a variable file based on distribution or OS family"
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"
    - "default.yml"

- name: "Become section"
  block:
    - name: "Install requirements"
      package:
        name: "{{ requirements }}"
        state: "present"

    - name: "Mkdir for java installation"
      file:
        path: "{{ java_path }}"
        state: "directory"
        owner: "root"
        group: "root"
        mode: "0755"

    - name: "Install java {{ java_major_version }}.{{ java_minor_version }}"
      unarchive:
        src: "{{ oracle_artifact }}"
        dest: "{{ java_path }}"
        owner: "root"
        group: "root"
        mode: "0755"
        creates: "{{ java_path }}{{ java_package }}1.{{ java_major_version }}.0_{{ java_minor_version }}/bin/"

    - name: "Check for java binaries existence"
      stat:
        path: "{{ java_path }}{{ java_package }}1.{{ java_major_version }}.0_{{ java_minor_version }}/bin/{{ binary }}"
      register: java_binary_collection
      loop:
        - "java"
        - "javac"
        - "jar"
      loop_control:
        loop_var: binary

    - name: "Update alternatives"
      alternatives:
        name: "{{ item.binary }}"
        path: "{{ java_path }}{{ java_package }}1.{{ java_major_version }}.0_{{ java_minor_version }}/bin/{{ item.binary }}"
        link: "/usr/bin/{{ item.binary }}"
        priority: 100
      with_items: "{{ java_binary_collection.results }}"
      when: item.stat.exists

    - name: "Put java profile"
      template:
        src: "java.sh.j2"
        dest: "/etc/profile.d/java.sh"
        owner: "root"
        group: "root"
        mode: "0555"

  become: True
