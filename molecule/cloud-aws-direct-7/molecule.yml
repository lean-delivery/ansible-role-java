---
dependency:
  name: galaxy
  options:
    role-file: requirements.yml
driver:
  name: ec2
lint:
  name: yamllint
  options:
    config-file: .yamllint
platforms:

  - name: test-aws-centos6-ansible-role-java-7-rpm
    image: ami-1585c46a
    instance_type: m4.large
    region: us-east-1
    vpc_subnet_id: subnet-05a2ef2b767afec50
    assign_public_ip: False
    spot_price: 0.04
    security_group_name:
      - default
    wait_timeout: 1800
    ssh_user: centos
    groups:
     - rhel_family
     - rpm

  - name: test-aws-Debian9-ansible-role-java-7-tarball
    image: ami-003f19e0e687de1cd
    instance_type: m5.large
    region: us-east-1
    vpc_subnet_id: subnet-05a2ef2b767afec50
    assign_public_ip: False
    spot_price: 0.04
    security_group_name:
      - default
    wait_timeout: 1800
    ssh_user: admin
    groups:
      - debian_family
      - tarball

provisioner:
  name: ansible
  log: False
  inventory:
    group_vars:
      tarball:
        java_package: jdk
        java_major_version: 7
        java_tarball_install: True
        transport: web
        transport_web: "{{ lookup('env','STORAGE_AWS') }}/oracle-java/jdk-7u191-linux-x64.tar.gz"
        java_unlimited_policy_transport: oracle-fallback
      rpm:
        java_package: jdk
        java_major_version: 7
        java_tarball_install: False
        transport: web
        transport_web: "{{ lookup('env','STORAGE_AWS') }}/oracle-java/jdk-7u191-linux-x64.rpm"
        java_unlimited_policy_transport: oracle-fallback
  playbooks:
    create: ../resources/provisioning/AWS/create.yml
    prepare: ../resources/provisioning/AWS/prepare.yml
    destroy: ../resources/provisioning/AWS/destroy.yml
  lint:
    name: ansible-lint
  env:
    ANSIBLE_LIBRARY: ${ANSIBLE_LIBRARY}
scenario:
  name: cloud-aws-direct-7
verifier:
  name: testinfra
  options:
    verbose: true
  directory: ../resources/tests/
  lint:
    name: flake8
