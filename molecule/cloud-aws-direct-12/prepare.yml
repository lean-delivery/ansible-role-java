---
# - name: Include common prepare
#   import_playbook: ../resources/provisioning/AWS/prepare.yml

- name: Prepare Ubuntu / Debian
  hosts: debian_family
  gather_facts: false
  tasks:

    - name: Install python for Ansible
      raw: (test -e /usr/bin/python) || (apt install -y python-minimal)
      become: true
      # changed_when: "'installed' in update_result.stdout"
      register: update_result
      retries: 10
      delay: 5
      until: update_result.rc == 0

    - name: debug update_result
      debug:
        var: update_result

- name: Prepare Debian
  hosts: debian_family
  tasks:

    - name: Add universe repository for bionic
      apt_repository:
        repo: deb http://archive.ubuntu.com/ubuntu bionic universe
        state: present
      when: ansible_distribution_release == 'bionic'
      become: true

    - name: Install python packages
      apt:
        name:
          # - python-minimal
          - python-setuptools
        state: present
      register: status
      until: status is succeeded
      become: true

- name: Prepare RHEL
  hosts: rhel_family
  tasks:

    - block:
        - name: Enable EPEL repository
          yum:
            name: "https://dl.fedoraproject.org/pub/epel/epel-release-latest-\
              {{ ansible_distribution_major_version }}.noarch.rpm"
            state: 'present'
          register: status
          until: status is succeeded
      rescue:
        - name: Enable default EPEL repository
          yum:
            name: https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
            state: 'present'
          register: status
          until: status is succeeded
      become: true

- name: Prepare host to S3 transport
  hosts: s3
  tasks:

    - block:
        - name: Install pip package
          package:
            name: python-pip
            state: present
          register: status
          until: status is succeeded
      rescue:
        - name: Install pip3 package
          package:
            name:
              - python3-pip
            state: present
          register: status
          until: status is succeeded
      become: true

    - name: Upgrade pip
      pip:
        name:
          - pip
        state: present
        extra_args: --upgrade
      register: status
      until: status is succeeded
      become: true

    - name: Install boto module
      pip:
        name:
          - botocore
          - boto
          - boto3
        state: present
        # extra_args: --upgrade
      register: status
      until: status is succeeded
      become: true
